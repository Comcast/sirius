#!/usr/bin/env python

import hashlib
import base64
import sys

if len(sys.argv) < 2:
    sys.stderr.write("Simple utility for converting an existing wal from using\n")
    sys.stderr.write("MD5 checksums to the more current FNV-1a\n")
    sys.stderr.write("\n")
    sys.stderr.write("Reads from a file, and outputs the adjusted log to STDOUT\n")
    sys.stderr.write("\n")
    sys.stderr.write("\tusage: %s <infile>\n" % sys.argv[0])
    sys.stderr.write("\n")
    sys.exit(1)

f = open(sys.argv[1], 'r')

def fnv(s):
    hash = 14695981039346656037
    for c in s:
        hash ^= ord(c)
        hash *= 1099511628211
        hash &= 0xffffffffffffffff
    return hash

for line in f:
    chksum = line[:24]
    data = line[24:]
    if base64.b64encode(hashlib.md5(data).digest()) != chksum:
        sys.stderr.write("BAD CHECKSUM: %s\n" % chksum)
        sys.exit(1)
    sys.stdout.write("%016x%s" % (fnv(data), data))
